/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import main.ProgramaPrincipal;
import datos.Bebida;
import datos.Caja;
import datos.Categoria;
import datos.Combo;
import datos.Pizza;
import datos.Producto;
import datos.Topping;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import negocio.Lista;

/**
 *
 * @author Nertrox
 */
public class FrAgregarProducto extends javax.swing.JFrame {

    /**
     * Creates new form FrAgregarProducto
     */
    private String marca, sabor, nombre, descripcion;
    private int disponibles, tamano, cantidadDisponible, precio;
    private Categoria categoria;

    public FrAgregarProducto() {
        initComponents();
        setLocationRelativeTo(null);
        llenarComboCategoria();
        llenarComboCajas();
        inico();

    }
    
    private String desformatear(String value){

        String formateado[] = value.split(",");
        String desformateado = "";
        for (int i = 0; i<formateado.length;i++) 
            desformateado+=formateado[i];
        
        return desformateado;
    }


    private void inico() {
        jComboBoxCaja.setVisible(false);
        jLabelCaja.setVisible(false);
        categoria = (Categoria) jComboBoxCategoria.getSelectedItem();
        jTextFieldMarca.setVisible(false);
        jTextFieldSabor.setVisible(false);
        jTextFieldTam.setVisible(false);
        jTextFieldCant.setVisible(false);
        jComboBoxCaja.setVisible(false);
        jLabelCaja.setVisible(false);

        jLabelCant.setVisible(false);
        jLabelMarca.setVisible(false);
        jLabelSabor.setVisible(false);
        jLabelTam.setVisible(false);
    }

    private void llenarComboCategoria() {
        ComboBoxModel modelo = new DefaultComboBoxModel(Categoria.values());
        jComboBoxCategoria.setModel(modelo);

    }

    private boolean llenarComboCajas() {
        ComboBoxModel modelo;
        Lista cajas = ProgramaPrincipal.datos.getCajas();
        if (cajas.cantidad() > 0) {
            String[] nombres = new String[cajas.cantidad()];
            for (int i = 0; i < cajas.cantidad(); i++) {
                nombres[i] = ((Caja) cajas.obtener(i)).getNombre();
            }
            modelo = new DefaultComboBoxModel(nombres);
            jComboBoxCaja.setModel(modelo);

            return true;
        }
        return false;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabelSabor = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelMarca = new javax.swing.JLabel();
        jTextFieldTam = new javax.swing.JTextField();
        jLabelTam = new javax.swing.JLabel();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jTextFielPrecio = new javax.swing.JTextField();
        jTextFieldMarca = new javax.swing.JTextField();
        jButtonAgregar = new javax.swing.JButton();
        jLabelCant = new javax.swing.JLabel();
        jTextFieldDesc = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCant = new javax.swing.JTextField();
        jLabelPrecio = new javax.swing.JLabel();
        jTextFieldSabor = new javax.swing.JTextField();
        jLabelCaja = new javax.swing.JLabel();
        jComboBoxCaja = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setUndecorated(true);
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(149, 165, 166));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 107, 70), 10, true));
        jPanel3.setForeground(new java.awt.Color(204, 204, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelSabor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelSabor.setText("Sabor");
        jPanel3.add(jLabelSabor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 620, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Categoria");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        jLabelMarca.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelMarca.setText("Marca");
        jPanel3.add(jLabelMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, -1, -1));

        jTextFieldTam.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldTam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTamActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldTam, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 300, -1));

        jLabelTam.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTam.setText("Tamaño");
        jPanel3.add(jLabelTam, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, -1, -1));

        jComboBoxCategoria.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriaActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBoxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 300, -1));

        jTextFielPrecio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFielPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielPrecioActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFielPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 300, -1));

        jTextFieldMarca.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMarcaActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 540, 300, -1));

        jButtonAgregar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 690, 181, 71));

        jLabelCant.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelCant.setText("Cantidad disponible");
        jPanel3.add(jLabelCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        jTextFieldDesc.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDescActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 300, -1));

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 690, 181, 71));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Descripción");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        jTextFieldCant.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 300, -1));

        jLabelPrecio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelPrecio.setText("Precio");
        jPanel3.add(jLabelPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, -1));

        jTextFieldSabor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSaborActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldSabor, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 300, -1));

        jLabelCaja.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelCaja.setText("Caja");
        jPanel3.add(jLabelCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 60, 92, -1));

        jComboBoxCaja.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel3.add(jComboBoxCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 60, 200, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nombre");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jTextFieldNombre.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 300, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTamActionPerformed

    private void jComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaActionPerformed

        if ((Categoria) jComboBoxCategoria.getSelectedItem() == Categoria.BEBIDA) {
            jTextFieldMarca.setVisible(true);
            jTextFieldSabor.setVisible(true);
            jTextFieldTam.setVisible(true);
            jTextFieldCant.setVisible(true);
            jComboBoxCaja.setVisible(false);
            jLabelCaja.setVisible(false);
            jTextFielPrecio.setVisible(true);

            jLabelCant.setVisible(true);
            jLabelMarca.setVisible(true);
            jLabelPrecio.setVisible(true);
            jLabelSabor.setVisible(true);
            jLabelTam.setVisible(true);
            jLabelCant.setText("Cantidad inicial(unidades)");
            jLabelTam.setText("Tamaño(ml)");
            categoria = (Categoria) jComboBoxCategoria.getSelectedItem();

            categoria = (Categoria) jComboBoxCategoria.getSelectedItem();
        } else if ((Categoria) jComboBoxCategoria.getSelectedItem() == Categoria.TOPPING) {
            jTextFieldCant.setVisible(true);
            jTextFieldMarca.setVisible(false);
            jTextFieldSabor.setVisible(false);
            jTextFieldTam.setVisible(false);
            jTextFielPrecio.setVisible(false);
            jComboBoxCaja.setVisible(false);
            jComboBoxCaja.setVisible(false);
            jLabelCaja.setVisible(false);
            jLabelCant.setVisible(true);
            jLabelMarca.setVisible(false);
            jLabelPrecio.setVisible(false);
            jLabelSabor.setVisible(false);
            jLabelTam.setVisible(false);
            jLabelCant.setText("Cantidad inicial(gramos)");
            categoria = (Categoria) jComboBoxCategoria.getSelectedItem();
        } else if ((Categoria) jComboBoxCategoria.getSelectedItem() == Categoria.CAJA) {
            jLabelCant.setText("Cantidad inicial(unidades)");
            jLabelTam.setText("Tamaño(pulgadas)");
            jTextFieldMarca.setVisible(false);
            jTextFieldSabor.setVisible(false);
            jTextFielPrecio.setVisible(false);
            jTextFieldTam.setVisible(true);
            jTextFieldCant.setVisible(true);
            jComboBoxCaja.setVisible(false);
            jLabelCaja.setVisible(false);
            jLabelCant.setVisible(true);
            jLabelMarca.setVisible(false);
            jLabelPrecio.setVisible(false);
            jLabelSabor.setVisible(false);
            jLabelTam.setVisible(true);
            categoria = (Categoria) jComboBoxCategoria.getSelectedItem();
        } else {
            jTextFieldMarca.setVisible(false);
            jTextFieldSabor.setVisible(false);
            jTextFieldTam.setVisible(false);
            jTextFieldCant.setVisible(false);
            jTextFielPrecio.setVisible(true);
            jLabelCant.setVisible(false);
            jLabelMarca.setVisible(false);
            jLabelPrecio.setVisible(true);
            jLabelSabor.setVisible(false);
            jLabelTam.setVisible(false);
            categoria = (Categoria) jComboBoxCategoria.getSelectedItem();
            if (categoria == Categoria.PIZZA) {
                if (!llenarComboCajas()) {
                    jComboBoxCaja.setVisible(true);
                    jLabelCaja.setVisible(true);
                    JOptionPane.showMessageDialog(this, "No hay cajas para agregar a la pizza. Debe agregar una caja primero!");
                } else {
                    jComboBoxCaja.setVisible(true);
                    jLabelCaja.setVisible(true);
                }
            } else {
                jComboBoxCaja.setVisible(false);
                jLabelCaja.setVisible(false);
            }
        }


    }//GEN-LAST:event_jComboBoxCategoriaActionPerformed

    private void jTextFielPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielPrecioActionPerformed

    private void jTextFieldMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMarcaActionPerformed

    private void jTextFieldDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescActionPerformed

    private void jTextFieldCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantActionPerformed

    private void jTextFieldSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSaborActionPerformed

    }//GEN-LAST:event_jTextFieldSaborActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed

        switch (categoria) {

            case CAJA: {
                try {
                    nombre = jTextFieldNombre.getText();
                    descripcion = jTextFieldDesc.getText();
                    disponibles = Integer.parseInt(desformatear(jTextFieldCant.getText()));
                    tamano = Integer.parseInt(desformatear(jTextFieldTam.getText()));
                    if (nombre.equals("") || descripcion.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        Caja c = new Caja(disponibles, nombre, descripcion, tamano, categoria);
                        if (ProgramaPrincipal.datos.agregarProducto(c)) {
                            ProgramaPrincipal.datos.guardarCajas(ProgramaPrincipal.pathCajas);
                            JOptionPane.showMessageDialog(this, "Caja agregada correctamente!");
                            jTextFieldCant.setText("");
                            jTextFieldTam.setText("");
                            jTextFieldNombre.setText("");
                            jTextFielPrecio.setText("");
                            jTextFieldDesc.setText("");
                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe una caja con ese nombre!");
                        }

                    }

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }

                break;
            }
            case BEBIDA: {

                try {
                    marca = jTextFieldMarca.getText();
                    sabor = jTextFieldSabor.getText();
                    disponibles = Integer.parseInt(desformatear(jTextFieldCant.getText()));
                    tamano = Integer.parseInt(desformatear(jTextFieldTam.getText()));
                    nombre = jTextFieldNombre.getText();
                    String p = desformatear(jTextFielPrecio.getText());
                    precio = Integer.parseInt(p);
                    descripcion = jTextFieldDesc.getText();

                    if (nombre.equals("") || descripcion.equals("") || marca.equals("") || sabor.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        Bebida bebida = new Bebida(nombre, descripcion, precio, categoria, marca, sabor, tamano, disponibles);
                        if (ProgramaPrincipal.datos.agregarProducto(bebida)) {
                            ProgramaPrincipal.datos.guardarBebidas(ProgramaPrincipal.pathB);
                            JOptionPane.showMessageDialog(this, "Bebida agregada correctamente!");
                            jTextFieldMarca.setText("");
                            jTextFieldSabor.setText("");
                            jTextFieldCant.setText("");
                            jTextFieldTam.setText("");
                            jTextFieldNombre.setText("");
                            jTextFielPrecio.setText("");
                            jTextFieldDesc.setText("");

                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe una bebida con ese nombre!");
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }

                break;
            }

            case TOPPING: {

                try {
                    nombre = jTextFieldNombre.getText();
                    descripcion = jTextFieldDesc.getText();
                    cantidadDisponible = Integer.parseInt(desformatear(jTextFieldCant.getText()));

                    if (nombre.equals("") || descripcion.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        Topping topping = new Topping(nombre, descripcion, categoria, cantidadDisponible);
                        if (ProgramaPrincipal.datos.agregarProducto(topping)) {
                            ProgramaPrincipal.datos.guardarToppings(ProgramaPrincipal.pathT);
                            JOptionPane.showMessageDialog(this, "Topping agregado correctamente!");
                            jTextFieldMarca.setText(null);
                            jTextFieldSabor.setText(null);
                            jTextFieldCant.setText(null);
                            jTextFieldTam.setText(null);
                            jTextFieldNombre.setText(null);
                            jTextFielPrecio.setText(null);
                            jTextFieldDesc.setText(null);

                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe un topping con ese nombre!");
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }

                break;
            }

            case OTRO: {

                try {
                    nombre = jTextFieldNombre.getText();
                    String p = desformatear(jTextFielPrecio.getText());
                    precio = Integer.parseInt(p);
                    descripcion = jTextFieldDesc.getText();

                    if (nombre.equals("") || descripcion.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        Producto producto = new Producto(nombre, descripcion, precio, categoria);
                        if (ProgramaPrincipal.datos.agregarProducto(producto)) {
                            ProgramaPrincipal.datos.guardarOtros(ProgramaPrincipal.pathProd);
                            JOptionPane.showMessageDialog(this, "Producto agregado correctamente!");
                            jTextFieldMarca.setText("");
                            jTextFieldSabor.setText("");
                            jTextFieldCant.setText("");
                            jTextFieldTam.setText("");
                            jTextFieldNombre.setText("");
                            jTextFielPrecio.setText("");
                            jTextFieldDesc.setText("");
                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe un producto con ese nombre!");
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }
                break;
            }

            case PIZZA: {

                try {
                    nombre = jTextFieldNombre.getText();
                    String p = desformatear(jTextFielPrecio.getText());
                    precio = Integer.parseInt(p);
                    descripcion = jTextFieldDesc.getText();
                    String caja = String.valueOf(jComboBoxCaja.getSelectedItem());

                    if (nombre.equals("") || descripcion.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        if (caja.equals("null")) {
                            JOptionPane.showMessageDialog(this, "Debe agregar una caja primero!");
                        } else {
                            Pizza pizza = new Pizza(nombre, descripcion, precio, categoria, caja);
                            if (ProgramaPrincipal.datos.agregarProducto(pizza)) {
                                JOptionPane.showMessageDialog(this, "Pizza agregada correctamente! Ahora procedera a elegir los toppings.");
                                JFrameToppingAPizza toppings = new JFrameToppingAPizza(nombre);
                                /*jTextFieldMarca.setText("");
                                jTextFieldSabor.setText("");
                                jTextFieldCant.setText("");
                                jTextFieldTam.setText("");
                                jTextFieldNombre.setText("");
                                jTextFielPrecio.setText("");
                                jTextFieldDesc.setText("");*/
                                toppings.setVisible(true);
                                this.dispose();
                            } else {
                                JOptionPane.showMessageDialog(this, "Ya existe una pizza con ese nombre!");
                            }
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }
                break;
            }
            
            case COMBO:{
                 try {
                    nombre = jTextFieldNombre.getText();
                    String p = desformatear(jTextFielPrecio.getText());
                    precio = Integer.parseInt(p);
                    descripcion = jTextFieldDesc.getText();

                    if (nombre.equals("") || descripcion.equals("")) {
                        JOptionPane.showMessageDialog(this, "Falta rellenar algun campo!");
                    } else {
                        Combo combo = new Combo(nombre,descripcion, precio);
                        if (ProgramaPrincipal.datos.agregarProducto(combo)) {
                            //ProgramaPrincipal.datos.guardarCombos(ProgramaPrincipal.pathCombos);
                            jTextFieldMarca.setText("");
                            jTextFieldSabor.setText("");
                            jTextFieldCant.setText("");
                            jTextFieldTam.setText("");
                            jTextFieldNombre.setText("");
                            jTextFielPrecio.setText("");
                            jTextFieldDesc.setText("");
                            JOptionPane.showMessageDialog(this, "Combo agregado correctamente! Ahora procedera a agregar los productos del combo.");
                            FrAgregarCombo fr = new FrAgregarCombo(combo);
                            fr.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "Ya existe un combo con ese nombre!");
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Ingreso un dato incorrecto o falta ingresar un dato!");
                }
                break;
            }

        }

    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrAgregarProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrAgregarProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrAgregarProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrAgregarProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrAgregarProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<String> jComboBoxCaja;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelCaja;
    private javax.swing.JLabel jLabelCant;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelSabor;
    private javax.swing.JLabel jLabelTam;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextFielPrecio;
    private javax.swing.JTextField jTextFieldCant;
    private javax.swing.JTextField jTextFieldDesc;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldSabor;
    private javax.swing.JTextField jTextFieldTam;
    // End of variables declaration//GEN-END:variables
}
